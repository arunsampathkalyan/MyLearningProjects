//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.lookupAbiService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineOfBusiness", Namespace="http://schemas.datacontract.org/2004/07/SSP.eTrading.Services.Reference.Models")]
    public enum LineOfBusiness : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="Private Motorcar")]
        PrivateMotorcar = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Motorcycle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="Commercial VehicleService")]
        CommercialVehicleService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Household = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupValue", Namespace="http://schemas.datacontract.org/2004/07/SSP.eTrading.Services.Reference.Models")]
    [System.SerializableAttribute()]
    public partial class LookupValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentAbiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABICode {
            get {
                return this.ABICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABICodeField, value) != true)) {
                    this.ABICodeField = value;
                    this.RaisePropertyChanged("ABICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentAbi {
            get {
                return this.ParentAbiField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentAbiField, value) != true)) {
                    this.ParentAbiField = value;
                    this.RaisePropertyChanged("ParentAbi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TdfFilePdfBase", Namespace="http://schemas.datacontract.org/2004/07/SSP.eTrading.Services.Reference.Models.Po" +
        "licySummaryLookup")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication1.lookupAbiService.PolicyBooklet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication1.lookupAbiService.PolicySummary))]
    public partial class TdfFilePdfBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsurerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineOfBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeMnemonicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Broker {
            get {
                return this.BrokerField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerField, value) != true)) {
                    this.BrokerField = value;
                    this.RaisePropertyChanged("Broker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsurerName {
            get {
                return this.InsurerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsurerNameField, value) != true)) {
                    this.InsurerNameField = value;
                    this.RaisePropertyChanged("InsurerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineOfBusiness {
            get {
                return this.LineOfBusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.LineOfBusinessField, value) != true)) {
                    this.LineOfBusinessField = value;
                    this.RaisePropertyChanged("LineOfBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Panel {
            get {
                return this.PanelField;
            }
            set {
                if ((object.ReferenceEquals(this.PanelField, value) != true)) {
                    this.PanelField = value;
                    this.RaisePropertyChanged("Panel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeMnemonic {
            get {
                return this.SchemeMnemonicField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeMnemonicField, value) != true)) {
                    this.SchemeMnemonicField = value;
                    this.RaisePropertyChanged("SchemeMnemonic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeName {
            get {
                return this.SchemeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeNameField, value) != true)) {
                    this.SchemeNameField = value;
                    this.RaisePropertyChanged("SchemeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyBooklet", Namespace="http://schemas.datacontract.org/2004/07/SSP.eTrading.Services.Reference.Models.Po" +
        "licyBookletLookup")]
    [System.SerializableAttribute()]
    public partial class PolicyBooklet : WebApplication1.lookupAbiService.TdfFilePdfBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicySummary", Namespace="http://schemas.datacontract.org/2004/07/SSP.eTrading.Services.Reference.Models.Po" +
        "licySummaryLookup")]
    [System.SerializableAttribute()]
    public partial class PolicySummary : WebApplication1.lookupAbiService.TdfFilePdfBase {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="lookupAbiService.ILookupService")]
    public interface ILookupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetLists", ReplyAction="http://tempuri.org/ILookupService/GetListsResponse")]
        string[] GetLists(WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetLists", ReplyAction="http://tempuri.org/ILookupService/GetListsResponse")]
        System.Threading.Tasks.Task<string[]> GetListsAsync(WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetList", ReplyAction="http://tempuri.org/ILookupService/GetListResponse")]
        WebApplication1.lookupAbiService.LookupValue[] GetList(string name, WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey, string locale, string parentAbiCode, System.Nullable<System.DateTime> date, bool allData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetList", ReplyAction="http://tempuri.org/ILookupService/GetListResponse")]
        System.Threading.Tasks.Task<WebApplication1.lookupAbiService.LookupValue[]> GetListAsync(string name, WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey, string locale, string parentAbiCode, System.Nullable<System.DateTime> date, bool allData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetPolicySummary", ReplyAction="http://tempuri.org/ILookupService/GetPolicySummaryResponse")]
        WebApplication1.lookupAbiService.PolicySummary GetPolicySummary(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetPolicySummary", ReplyAction="http://tempuri.org/ILookupService/GetPolicySummaryResponse")]
        System.Threading.Tasks.Task<WebApplication1.lookupAbiService.PolicySummary> GetPolicySummaryAsync(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetPolicyBooklet", ReplyAction="http://tempuri.org/ILookupService/GetPolicyBookletResponse")]
        WebApplication1.lookupAbiService.PolicyBooklet GetPolicyBooklet(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookupService/GetPolicyBooklet", ReplyAction="http://tempuri.org/ILookupService/GetPolicyBookletResponse")]
        System.Threading.Tasks.Task<WebApplication1.lookupAbiService.PolicyBooklet> GetPolicyBookletAsync(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILookupServiceChannel : WebApplication1.lookupAbiService.ILookupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookupServiceClient : System.ServiceModel.ClientBase<WebApplication1.lookupAbiService.ILookupService>, WebApplication1.lookupAbiService.ILookupService {
        
        public LookupServiceClient() {
        }
        
        public LookupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LookupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetLists(WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey) {
            return base.Channel.GetLists(lineOfBusiness, apikey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListsAsync(WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey) {
            return base.Channel.GetListsAsync(lineOfBusiness, apikey);
        }
        
        public WebApplication1.lookupAbiService.LookupValue[] GetList(string name, WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey, string locale, string parentAbiCode, System.Nullable<System.DateTime> date, bool allData) {
            return base.Channel.GetList(name, lineOfBusiness, apikey, locale, parentAbiCode, date, allData);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.lookupAbiService.LookupValue[]> GetListAsync(string name, WebApplication1.lookupAbiService.LineOfBusiness lineOfBusiness, string apikey, string locale, string parentAbiCode, System.Nullable<System.DateTime> date, bool allData) {
            return base.Channel.GetListAsync(name, lineOfBusiness, apikey, locale, parentAbiCode, date, allData);
        }
        
        public WebApplication1.lookupAbiService.PolicySummary GetPolicySummary(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt) {
            return base.Channel.GetPolicySummary(schemeCode, coverDate, lineOfBusinessAsInt);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.lookupAbiService.PolicySummary> GetPolicySummaryAsync(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt) {
            return base.Channel.GetPolicySummaryAsync(schemeCode, coverDate, lineOfBusinessAsInt);
        }
        
        public WebApplication1.lookupAbiService.PolicyBooklet GetPolicyBooklet(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt) {
            return base.Channel.GetPolicyBooklet(schemeCode, coverDate, lineOfBusinessAsInt);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.lookupAbiService.PolicyBooklet> GetPolicyBookletAsync(string schemeCode, System.DateTime coverDate, int lineOfBusinessAsInt) {
            return base.Channel.GetPolicyBookletAsync(schemeCode, coverDate, lineOfBusinessAsInt);
        }
    }
}
